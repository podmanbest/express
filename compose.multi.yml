services:
  express0:
    container_name: express0
    image: localhost/express:1.0.0
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '256M'
        #reservations:
        #  cpus: '0.25'
        #  memory: '128M'
    volumes:
      - ./src:/app:z
  express1:
    container_name: express1
    image: localhost/express:1.0.0
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '256M'
        #reservations:
        #  cpus: '0.25'
        #  memory: '128M'
    volumes:
      - ./src:/app:z
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - '3000:80'
      # - "443:443"
    volumes:
      - ./dependencies/nginx.conf:/etc/nginx/nginx.conf:Z
      # - ./dependencies/ssl:/etc/nginx/ssl
    depends_on:
      - express0
      - express1

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - prometheus-data:/prometheus
      - ./dependencies/multi.yml:/etc/prometheus/prometheus.yml:Z
    depends_on:
      - express0
      - express1
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - '3030:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
volumes:
  grafana-data:
  prometheus-data:
